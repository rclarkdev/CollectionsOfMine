{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\rclar\\\\source\\\\repos\\\\CollectionsOfMine\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Injectable } from \"@angular/core\";\nimport { environment } from \"../../environments/environment\";\nlet ModelListService = class ModelListService {\n  constructor(route, http = null) {\n    var _this = this;\n    this.route = route;\n    this.http = http;\n    this.getCollectionsByAreaId = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (areaId) {\n        return yield _this.http.get(_this.apiUrl + \"/AreaCollections/\" + areaId).toPromise();\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    this.getItemsByCollectionId = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (collectionId) {\n        return yield _this.http.get(_this.apiUrl + \"/CollectionItems/\" + collectionId).toPromise();\n      });\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    this.apiUrl = environment.apiRoot + route;\n  }\n};\nModelListService = __decorate([Injectable({\n  providedIn: \"root\"\n})], ModelListService);\nexport { ModelListService };","map":{"version":3,"names":["__decorate","Injectable","environment","ModelListService","constructor","route","http","getCollectionsByAreaId","areaId","get","apiUrl","toPromise","getItemsByCollectionId","collectionId","apiRoot","providedIn"],"sources":["C:/Users/rclar/source/repos/CollectionsOfMine/ClientApp/src/app/services/model-list.service.ts"],"sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../environments/environment\";\r\nlet ModelListService = class ModelListService {\r\n    constructor(route, http = null) {\r\n        this.route = route;\r\n        this.http = http;\r\n        this.getCollectionsByAreaId = async (areaId) => {\r\n            return await this.http\r\n                .get(this.apiUrl + \"/AreaCollections/\" + areaId)\r\n                .toPromise();\r\n        };\r\n        this.getItemsByCollectionId = async (collectionId) => {\r\n            return await this.http\r\n                .get(this.apiUrl + \"/CollectionItems/\" + collectionId)\r\n                .toPromise();\r\n        };\r\n        this.apiUrl = environment.apiRoot + route;\r\n    }\r\n};\r\nModelListService = __decorate([\r\n    Injectable({\r\n        providedIn: \"root\",\r\n    })\r\n], ModelListService);\r\nexport { ModelListService };\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,WAAW,QAAQ,gCAAgC;AAC5D,IAAIC,gBAAgB,GAAG,MAAMA,gBAAgB,CAAC;EAC1CC,WAAW,CAACC,KAAK,EAAEC,IAAI,GAAG,IAAI,EAAE;IAAA;IAC5B,IAAI,CAACD,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,sBAAsB;MAAA,6BAAG,WAAOC,MAAM,EAAK;QAC5C,aAAa,KAAI,CAACF,IAAI,CACjBG,GAAG,CAAC,KAAI,CAACC,MAAM,GAAG,mBAAmB,GAAGF,MAAM,CAAC,CAC/CG,SAAS,EAAE;MACpB,CAAC;MAAA;QAAA;MAAA;IAAA;IACD,IAAI,CAACC,sBAAsB;MAAA,8BAAG,WAAOC,YAAY,EAAK;QAClD,aAAa,KAAI,CAACP,IAAI,CACjBG,GAAG,CAAC,KAAI,CAACC,MAAM,GAAG,mBAAmB,GAAGG,YAAY,CAAC,CACrDF,SAAS,EAAE;MACpB,CAAC;MAAA;QAAA;MAAA;IAAA;IACD,IAAI,CAACD,MAAM,GAAGR,WAAW,CAACY,OAAO,GAAGT,KAAK;EAC7C;AACJ,CAAC;AACDF,gBAAgB,GAAGH,UAAU,CAAC,CAC1BC,UAAU,CAAC;EACPc,UAAU,EAAE;AAChB,CAAC,CAAC,CACL,EAAEZ,gBAAgB,CAAC;AACpB,SAASA,gBAAgB"},"metadata":{},"sourceType":"module"}