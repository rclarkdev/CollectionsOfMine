{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\rclar\\\\source\\\\repos\\\\CollectionsOfMine\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { CommonService } from \"../../services/common.service\";\nimport { ModelListService } from \"../../services/model-list.service\";\nlet CollectionListComponent = class CollectionListComponent {\n  constructor(router, http, activeRoute, dataTableService, modalService) {\n    var _this = this;\n    this.router = router;\n    this.http = http;\n    this.activeRoute = activeRoute;\n    this.dataTableService = dataTableService;\n    this.modalService = modalService;\n    this.viewCollections = [];\n    this.showTable = true;\n    this.selectedAreaCollections = () => {\n      this.activeRoute.paramMap.subscribe( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (params) {\n          _this.selectedArea = params.get(\"id\");\n          if (_this.selectedArea) {\n            let area = yield _this.areasService.getById(_this.selectedArea);\n            _this.collectionsTitle = area[\"name\"];\n            _this.collections = area[\"collections\"];\n            _this.viewCollections.length = 0;\n            const that = _this;\n            _this.collections.forEach( /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator(function* (collection) {\n                const fileId = collection[\"fileId\"];\n                let imgSrc = \"\";\n                yield that.filesService.getById(fileId).then(function (file) {\n                  if (file) {\n                    imgSrc = 'data:image/jpeg;base64,' + file['base64'];\n                  }\n                });\n                let viewcollection = {\n                  id: collection[\"id\"],\n                  name: collection[\"name\"],\n                  description: collection[\"description\"],\n                  imgSrc: imgSrc\n                };\n                that.viewCollections.push(viewcollection);\n              });\n              return function (_x2) {\n                return _ref2.apply(this, arguments);\n              };\n            }());\n          }\n        });\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    };\n    this.allCollections = /*#__PURE__*/_asyncToGenerator(function* () {\n      const that = _this;\n      yield _this.collectionsService.getAll().then(function (collections) {\n        that.collectionsService.setTypes(collections);\n        that.collectionsService.typesObservable.subscribe(collections => {\n          that.collections = collections;\n          that.dataTableService.setDtTrigger(collections);\n          that.collectionsTitle = \"Collections\";\n          that.viewCollections.length = 0;\n          that.collections.forEach(function (collection) {\n            let viewCollection = {\n              Id: collection[\"id\"],\n              Name: '<a name=\"collection\" href=\"/collection/' + collection[\"id\"] + '\">' + collection[\"name\"] + \"</a>\",\n              Description: collection[\"description\"],\n              CreatedOn: collection[\"createdOn\"]\n            };\n            that.viewCollections.push(viewCollection);\n          });\n        });\n      });\n    });\n    this.getCollections = /*#__PURE__*/_asyncToGenerator(function* () {\n      if (_this.activeRoute.routeConfig.path === \"collections\") {\n        _this.allCollections();\n      } else {\n        _this.showTable = false;\n        _this.modelListService = new ModelListService(\"collections\", _this.http);\n        _this.selectedAreaCollections();\n      }\n    });\n    this.refreshCollections = /*#__PURE__*/_asyncToGenerator(function* () {\n      yield _this.getCollections();\n    });\n    this.edit = /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator(function* (content, id) {\n        _this.collectionId = id;\n        _this.open(content);\n      });\n      return function (_x3, _x4) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n    this.delete = /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator(function* (id) {\n        if (confirm(\"Are you sure?\")) {\n          yield _this.collectionsService.delete(id);\n          _this.getCollections();\n        }\n      });\n      return function (_x5) {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n    this.collectionsService = new CommonService(\"collections\", http);\n    this.areasService = new CommonService(\"areas\", http);\n    this.filesService = new CommonService(\"files\", http);\n  }\n  open(content, createCollection = false) {\n    this.createCollection = createCollection;\n    this.modalService.open(content).result.then(result => {}, reason => {});\n  }\n  ngOnInit() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.getCollections();\n    })();\n  }\n};\nCollectionListComponent = __decorate([Component({\n  selector: \"app-collection-list\",\n  templateUrl: \"./collection-list.component.html\",\n  styleUrls: [\"./collection-list.component.css\"]\n})], CollectionListComponent);\nexport { CollectionListComponent };","map":{"version":3,"names":["__decorate","Component","CommonService","ModelListService","CollectionListComponent","constructor","router","http","activeRoute","dataTableService","modalService","viewCollections","showTable","selectedAreaCollections","paramMap","subscribe","params","selectedArea","get","area","areasService","getById","collectionsTitle","collections","length","that","forEach","collection","fileId","imgSrc","filesService","then","file","viewcollection","id","name","description","push","allCollections","collectionsService","getAll","setTypes","typesObservable","setDtTrigger","viewCollection","Id","Name","Description","CreatedOn","getCollections","routeConfig","path","modelListService","refreshCollections","edit","content","collectionId","open","delete","confirm","createCollection","result","reason","ngOnInit","selector","templateUrl","styleUrls"],"sources":["C:/Users/rclar/source/repos/CollectionsOfMine/ClientApp/src/app/collection/list/collection-list.component.ts"],"sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component } from \"@angular/core\";\r\nimport { CommonService } from \"../../services/common.service\";\r\nimport { ModelListService } from \"../../services/model-list.service\";\r\nlet CollectionListComponent = class CollectionListComponent {\r\n    constructor(router, http, activeRoute, dataTableService, modalService) {\r\n        this.router = router;\r\n        this.http = http;\r\n        this.activeRoute = activeRoute;\r\n        this.dataTableService = dataTableService;\r\n        this.modalService = modalService;\r\n        this.viewCollections = [];\r\n        this.showTable = true;\r\n        this.selectedAreaCollections = () => {\r\n            this.activeRoute.paramMap.subscribe(async (params) => {\r\n                this.selectedArea = params.get(\"id\");\r\n                if (this.selectedArea) {\r\n                    let area = await this.areasService.getById(this.selectedArea);\r\n                    this.collectionsTitle = area[\"name\"];\r\n                    this.collections = area[\"collections\"];\r\n                    this.viewCollections.length = 0;\r\n                    const that = this;\r\n                    this.collections.forEach(async function (collection) {\r\n                        const fileId = collection[\"fileId\"];\r\n                        let imgSrc = \"\";\r\n                        await that.filesService.getById(fileId).then(function (file) {\r\n                            if (file) {\r\n                                imgSrc = 'data:image/jpeg;base64,' + file['base64'];\r\n                            }\r\n                        });\r\n                        let viewcollection = {\r\n                            id: collection[\"id\"],\r\n                            name: collection[\"name\"],\r\n                            description: collection[\"description\"],\r\n                            imgSrc: imgSrc\r\n                        };\r\n                        that.viewCollections.push(viewcollection);\r\n                    });\r\n                }\r\n            });\r\n        };\r\n        this.allCollections = async () => {\r\n            const that = this;\r\n            await this.collectionsService.getAll().then(function (collections) {\r\n                that.collectionsService.setTypes(collections);\r\n                that.collectionsService.typesObservable.subscribe((collections) => {\r\n                    that.collections = collections;\r\n                    that.dataTableService.setDtTrigger(collections);\r\n                    that.collectionsTitle = \"Collections\";\r\n                    that.viewCollections.length = 0;\r\n                    that.collections.forEach(function (collection) {\r\n                        let viewCollection = {\r\n                            Id: collection[\"id\"],\r\n                            Name: '<a name=\"collection\" href=\"/collection/' +\r\n                                collection[\"id\"] +\r\n                                '\">' +\r\n                                collection[\"name\"] +\r\n                                \"</a>\",\r\n                            Description: collection[\"description\"],\r\n                            CreatedOn: collection[\"createdOn\"],\r\n                        };\r\n                        that.viewCollections.push(viewCollection);\r\n                    });\r\n                });\r\n            });\r\n        };\r\n        this.getCollections = async () => {\r\n            if (this.activeRoute.routeConfig.path === \"collections\") {\r\n                this.allCollections();\r\n            }\r\n            else {\r\n                this.showTable = false;\r\n                this.modelListService = new ModelListService(\"collections\", this.http);\r\n                this.selectedAreaCollections();\r\n            }\r\n        };\r\n        this.refreshCollections = async () => {\r\n            await this.getCollections();\r\n        };\r\n        this.edit = async (content, id) => {\r\n            this.collectionId = id;\r\n            this.open(content);\r\n        };\r\n        this.delete = async (id) => {\r\n            if (confirm(\"Are you sure?\")) {\r\n                await this.collectionsService.delete(id);\r\n                this.getCollections();\r\n            }\r\n        };\r\n        this.collectionsService = new CommonService(\"collections\", http);\r\n        this.areasService = new CommonService(\"areas\", http);\r\n        this.filesService = new CommonService(\"files\", http);\r\n    }\r\n    open(content, createCollection = false) {\r\n        this.createCollection = createCollection;\r\n        this.modalService.open(content).result.then((result) => { }, (reason) => { });\r\n    }\r\n    async ngOnInit() {\r\n        this.getCollections();\r\n    }\r\n};\r\nCollectionListComponent = __decorate([\r\n    Component({\r\n        selector: \"app-collection-list\",\r\n        templateUrl: \"./collection-list.component.html\",\r\n        styleUrls: [\"./collection-list.component.css\"],\r\n    })\r\n], CollectionListComponent);\r\nexport { CollectionListComponent };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}