{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\rclar\\\\source\\\\repos\\\\CollectionsOfMine\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { environment } from \"../../environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UploadService {\n  constructor(http) {\n    var _this = this;\n    this.http = http;\n    this.uploadFile = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (fileToUpload) {\n        const formData = new FormData();\n        formData.append(\"file\", fileToUpload, fileToUpload.name);\n        return yield _this.http.post(environment.apiRoot + \"files\", formData, {\n          reportProgress: true,\n          observe: \"events\"\n        }).toPromise();\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  }\n}\nUploadService.ɵfac = function UploadService_Factory(t) {\n  return new (t || UploadService)(i0.ɵɵinject(i1.HttpClient));\n};\nUploadService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UploadService,\n  factory: UploadService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"names":["environment","i0","i1","UploadService","constructor","http","uploadFile","fileToUpload","formData","FormData","append","name","post","apiRoot","reportProgress","observe","toPromise","ɵfac","UploadService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"sources":["C:/Users/rclar/source/repos/CollectionsOfMine/ClientApp/src/app/services/upload.service.ts"],"sourcesContent":["import { environment } from \"../../environments/environment\";\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class UploadService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this.uploadFile = async (fileToUpload) => {\r\n            const formData = new FormData();\r\n            formData.append(\"file\", fileToUpload, fileToUpload.name);\r\n            return await this.http\r\n                .post(environment.apiRoot + \"files\", formData, {\r\n                reportProgress: true,\r\n                observe: \"events\",\r\n            })\r\n                .toPromise();\r\n        };\r\n    }\r\n}\r\nUploadService.ɵfac = function UploadService_Factory(t) { return new (t || UploadService)(i0.ɵɵinject(i1.HttpClient)); };\r\nUploadService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: UploadService, factory: UploadService.ɵfac, providedIn: \"root\" });\r\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,gCAAgC;AAC5D,OAAO,KAAKC,EAAE,MAAM,eAAe;AACnC,OAAO,KAAKC,EAAE,MAAM,sBAAsB;AAC1C,OAAO,MAAMC,aAAa,CAAC;EACvBC,WAAW,CAACC,IAAI,EAAE;IAAA;IACd,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,UAAU;MAAA,6BAAG,WAAOC,YAAY,EAAK;QACtC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;QAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,YAAY,EAAEA,YAAY,CAACI,IAAI,CAAC;QACxD,aAAa,KAAI,CAACN,IAAI,CACjBO,IAAI,CAACZ,WAAW,CAACa,OAAO,GAAG,OAAO,EAAEL,QAAQ,EAAE;UAC/CM,cAAc,EAAE,IAAI;UACpBC,OAAO,EAAE;QACb,CAAC,CAAC,CACGC,SAAS,EAAE;MACpB,CAAC;MAAA;QAAA;MAAA;IAAA;EACL;AACJ;AACAb,aAAa,CAACc,IAAI,GAAG,SAASC,qBAAqB,CAACC,CAAC,EAAE;EAAE,OAAO,KAAKA,CAAC,IAAIhB,aAAa,EAAEF,EAAE,CAACmB,QAAQ,CAAClB,EAAE,CAACmB,UAAU,CAAC,CAAC;AAAE,CAAC;AACvHlB,aAAa,CAACmB,KAAK,GAAG,aAAcrB,EAAE,CAACsB,kBAAkB,CAAC;EAAEC,KAAK,EAAErB,aAAa;EAAEsB,OAAO,EAAEtB,aAAa,CAACc,IAAI;EAAES,UAAU,EAAE;AAAO,CAAC,CAAC"},"metadata":{},"sourceType":"module"}